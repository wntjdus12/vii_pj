name: Deploy Fullstack App to EC2

on:
  push:
    branches:
      - main

env:
  BACKEND_IMAGE: tjdusdl/backend-app
  FRONTEND_IMAGE: tjdusdl/react-app

  EC2_HOST: ${{ secrets.HOST }}
  EC2_USERNAME: ${{ secrets.USERNAME }}
  EC2_KEY: ${{ secrets.KEY }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and Push Backend Image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ env.BACKEND_IMAGE }}:latest

      - name: Build and Push Frontend Image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ env.FRONTEND_IMAGE }}:latest

      - name: Deploy to EC2 and Run Containers
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USERNAME }}
          key: ${{ env.EC2_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            echo "Pulling latest Docker images..."
            docker pull ${{ env.BACKEND_IMAGE }}:latest
            docker pull ${{ env.FRONTEND_IMAGE }}:latest

            echo "Stopping and removing old containers..."
            docker rm -f backend || true
            docker rm -f frontend || true
            docker rm -f mongo || true   # ✅ 기존 MongoDB 제거

            echo "Running MongoDB container..."
            docker run -d \
              --name mongo \
              --restart unless-stopped \
              -p 27017:27017 \
              -v /data/mongo:/data/db \
              -e MONGO_INITDB_ROOT_USERNAME=admin \
              -e MONGO_INITDB_ROOT_PASSWORD=admin123 \
              mongo:6.0

            echo "Running backend container on port 5000..."
            docker run -d \
              --name backend \
              --restart unless-stopped \
              -p 5000:5000 \
              ${{ env.BACKEND_IMAGE }}:latest

            echo "Running frontend container on port 5173..."
            docker run -d \
              --name frontend \
              --restart unless-stopped \
              -p 5173:5173 \
              ${{ env.FRONTEND_IMAGE }}:latest
